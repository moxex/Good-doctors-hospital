# Generated by Django 4.0.3 on 2022-04-14 00:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hospital', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('Doctor', 'Doctor'), ('Patient', 'Patient'), ('Human Resource', 'Human Resource')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alpha_2', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, help_text='Format: YYYY-MM-DD', null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('O-', 'O-'), ('O+', 'O+'), ('A-', 'A-'), ('A+', 'A+'), ('B-', 'B-'), ('B+', 'B+'), ('AB-', 'AB-'), ('AB+', 'AB+')], max_length=3)),
                ('med_reps', models.FileField(blank=True, upload_to='profile/med_reps')),
                ('case_paper', models.IntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_picture', models.ImageField(blank=True, default='/avatar.png', null=True, upload_to='profile_pics/%Y/%m/%d/')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.city')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.country')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DoctorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speciality', models.CharField(blank=True, choices=[('Dermatologists', 'Dermatologists'), ('Cardiologists', 'Cardiologists'), ('Gastroenterologist', 'Gastroenterologist'), ('Physiotherapist', 'Physiotherapist'), ('Pharmacist', 'Pharmacist'), ('Orthopaedist', 'Orthopaedist'), ('Nephrologist', 'Nephrologist'), ('Neurologist', 'Neurologist'), ('Rectal Surgeons', 'Rectal Surgeons'), ('Anesthesiologists', 'Anesthesiologists'), ('Allergists/Immunologists', 'Allergists/Immunologists'), ('Emergency Medicine Specialists', 'Emergency Medicine Specialists')], max_length=50, null=True)),
                ('date_of_birth', models.DateField(blank=True, help_text='Format: YYYY-MM-DD', null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('available_time', models.DateTimeField()),
                ('weekdays', models.CharField(help_text='Format: Monday - Friday', max_length=20)),
                ('weekends', models.CharField(help_text='Format: Saturday - Sunday', max_length=20)),
                ('about_me', models.TextField(blank=True, help_text='Write something about yourself, not more than 300 words', max_length=300, null=True)),
                ('education', models.CharField(blank=True, help_text='Eductional Background', max_length=100)),
                ('training', models.CharField(blank=True, help_text='Training Attended', max_length=100)),
                ('certificate', models.CharField(blank=True, help_text='Cerficate and award', max_length=100)),
                ('profile_picture', models.ImageField(blank=True, default='/avatar.png', null=True, upload_to='profile_pics/%Y/%m/%d/')),
                ('facebook', models.CharField(blank=True, max_length=120, null=True)),
                ('twitter', models.CharField(blank=True, max_length=120, null=True)),
                ('linkedIn', models.CharField(blank=True, max_length=120, null=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], max_length=8, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.city')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.country')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.department')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.country'),
        ),
    ]
